// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Competition {
  id             Int       @id @default(autoincrement())
  name           String    @unique
  contestsPlayed Contest[]
  score          Score[]
}

model Contest {
  id             Int         @id @default(autoincrement())
  date           DateTime
  team1          Team        @relation("HomeTeam", fields: [team1Id], references: [id])
  team1Id        Int
  team2          Team        @relation("AwayTeam", fields: [team2Id], references: [id])
  team2Id        Int
  winnerTeamId   Team        @relation("WinnerTeam", fields: [winnerTeam], references: [id])
  winnerTeam     Int
  offensiveBonus Boolean     @default(false)
  defensiveBonus Boolean     @default(false)
  competition    Competition @relation(fields: [competitionId], references: [id])
  competitionId  Int
  bet            Bet[]
}

model Team {
  id         Int       @id @default(autoincrement())
  teamName   String    @unique
  homeTeam   Contest[] @relation("HomeTeam")
  awayTeam   Contest[] @relation("AwayTeam")
  winnerTeam Contest[] @relation("WinnerTeam")
  bet        Bet[]
}

model User {
  id        Int     @id @default(autoincrement())
  firstname String
  lastname  String
  mail      String  @unique
  password  String
  pseudo    String  @unique
  bet       Bet[]
  score     Score[]
}

model Bet {
  id             Int     @id @default(autoincrement())
  contest        Contest @relation(fields: [matchId], references: [id])
  matchId        Int
  user           User    @relation(fields: [userId], references: [id])
  userId         Int
  betTeam        Team    @relation(fields: [betTeamId], references: [id])
  betTeamId      Int
  offensiveBonus Boolean @default(false)
  defensiveBonus Boolean @default(false)
}

model Score {
  id            Int         @id @default(autoincrement())
  total         Int         @default(0)
  competition   Competition @relation(fields: [competitionId], references: [id])
  competitionId Int
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
}
